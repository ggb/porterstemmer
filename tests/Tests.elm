module Tests exposing (..)

import Test exposing (..)
import Expect
import PorterStemmer exposing (..)


testHelper i (result, expected) = 
    test ("Test " ++ toString i) <|
        \() ->
            Expect.equal result expected

tests =
    [ ((stem "consign"), "consign")
    , ((stem "consigned"), "consign")
    , ((stem "consigning"), "consign")
    , ((stem "consignment"), "consign")
    , ((stem "consist"), "consist")
    , ((stem "consisted"), "consist")
    , ((stem "consistency"), "consist")
    , ((stem "consistent"), "consist")
    , ((stem "consistently"), "consist")
    , ((stem "consisting"), "consist")
    , ((stem "consists"), "consist")
    , ((stem "consolation"), "consol")
    , ((stem "consolations"), "consol")
    , ((stem "consolatory"), "consolatori")
    , ((stem "console"), "consol")
    , ((stem "consoled"), "consol")
    , ((stem "consoles"), "consol")
    , ((stem "consolidate"), "consolid")
    , ((stem "consolidated"), "consolid")
    , ((stem "consolidating"), "consolid")
    , ((stem "consoling"), "consol")
    , ((stem "consols"), "consol")
    , ((stem "consonant"), "conson")
    , ((stem "consort"), "consort")
    , ((stem "consorted"), "consort")
    , ((stem "consorting"), "consort")
    , ((stem "conspicuous"), "conspicu")
    , ((stem "conspicuously"), "conspicu")
    , ((stem "conspiracy"), "conspiraci")
    , ((stem "conspirator"), "conspir")
    , ((stem "conspirators"), "conspir")
    , ((stem "conspire"), "conspir")
    , ((stem "conspired"), "conspir")
    , ((stem "conspiring"), "conspir")
    , ((stem "constable"), "constabl")
    , ((stem "constables"), "constabl")
    , ((stem "constance"), "constanc")
    , ((stem "constancy"), "constanc")
    , ((stem "constant"), "constant")
    , ((stem "knack"), "knack")
    , ((stem "knackeries"), "knackeri")
    , ((stem "knacks"), "knack")
    , ((stem "knag"), "knag")
    , ((stem "knave"), "knave")
    , ((stem "knaves"), "knave")
    , ((stem "knavish"), "knavish")
    , ((stem "kneaded"), "knead")
    , ((stem "kneading"), "knead")
    , ((stem "knee"), "knee")
    , ((stem "kneel"), "kneel")
    , ((stem "kneeled"), "kneel")
    , ((stem "kneeling"), "kneel")
    , ((stem "kneels"), "kneel")
    , ((stem "knees"), "knee")
    , ((stem "knell"), "knell")
    , ((stem "knelt"), "knelt")
    , ((stem "knew"), "knew")
    , ((stem "knick"), "knick")
    , ((stem "knif"), "knif")
    , ((stem "knife"), "knife")
    , ((stem "knight"), "knight")
    , ((stem "knights"), "knight")
    , ((stem "knit"), "knit")
    , ((stem "knits"), "knit")
    , ((stem "knitted"), "knit")
    , ((stem "knitting"), "knit")
    , ((stem "knives"), "knive")
    , ((stem "knob"), "knob")
    , ((stem "knobs"), "knob")
    , ((stem "knock"), "knock")
    , ((stem "knocked"), "knock")
    , ((stem "knocker"), "knocker")
    , ((stem "knockers"), "knocker")
    , ((stem "knocking"), "knock")
    , ((stem "knocks"), "knock")
    , ((stem "knopp"), "knopp")
    , ((stem "knot"), "knot")
    , ((stem "knots"), "knot")
    --
    , ((stem "lay"), "lai")
    , ((stem "try"), "try")
    , ((stem "sky"), "sky")
    , ((stem "happy"), "happi")
    ] |> List.indexedMap testHelper


all : Test
all =
    describe "Porter Stemmer Tests" tests
